---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nats.fullname" . }}
  {{- if .Values.clusterScoped }}
  namespace: {{ .Values.cluster.namespace | default "nats-io" | quote }}
  {{- else}}
  namespace: {{ .Values.cluster.namespace | default .Release.Namespace | quote }}
  {{- end}}
  labels:
    app: {{ template "nats.name" . }}
    chart: {{ template "nats.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- with .Values.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ template "nats.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.updateStrategy }}
  {{- if ne .Values.updateStrategy "RollingUpdate" }}
    rollingUpdate: null
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "nats.name" . }}
        release: {{ .Release.Name }}
{{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      {{- if .Values.rbacEnabled }}
      serviceAccountName: nats-streaming-operator
      {{- end }}
      containers:
      - name: nats-streaming-operator
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.pullPolicy  }}
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - name: readyz
          containerPort: 8080
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /readyz
            port: readyz
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: readyz
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10}}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{ .Values.nodeSelector }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{ .Values.tolerations }}
      {{- end }}
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName}}"
      {{- end }}
      {{- if eq .Values.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: "{{ template "nats.name" . }}"
                  release: {{ .Release.Name | quote }}
      {{- else if eq .Values.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: "{{ template "nats.name" . }}"
                  release: "{{ .Release.Name }}"
      {{- end }}
      {{- if .Values.pullSecrets }}
      imagePullSecrets:
        {{ .Values.pullSecrets}}
      {{- end }}
